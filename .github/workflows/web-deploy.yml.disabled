name: Deploy Web App to Firebase App Hosting

on:
  push:
    branches: [main]
    paths:
      - 'web/**'
      - '.github/workflows/web-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'web/**'

env:
  PROJECT_ID: pfinance-app-1748773335
  WORKLOAD_IDENTITY_PROVIDER: projects/859800863588/locations/global/workloadIdentityPools/github-pool/providers/github-provider
  SERVICE_ACCOUNT: github-actions@pfinance-app-1748773335.iam.gserviceaccount.com

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Set up buf CLI
      uses: bufbuild/buf-setup-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate protobuf code
      run: |
        cd proto
        buf generate

    - name: Install dependencies
      run: |
        cd web
        npm ci --legacy-peer-deps

    - name: Run linter
      run: |
        cd web
        npm run lint || true

    - name: Run tests
      run: |
        cd web
        npm test -- --passWithNoTests

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up buf CLI
      uses: bufbuild/buf-setup-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate protobuf code
      run: |
        cd proto
        buf generate

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      run: |
        cd web
        npm ci --legacy-peer-deps

    - name: Build Next.js app
      run: |
        cd web
        npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}

    - name: Deploy to Firebase Hosting
      run: |
        cd web
        firebase deploy --only hosting --project ${{ env.PROJECT_ID }}
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks