name: Deploy to Firebase and Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: pfinance-app-1748773335

jobs:
  build-and-deploy-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      working-directory: ./web
      run: npm ci --legacy-peer-deps

    - name: Create environment file
      working-directory: ./web
      run: |
        echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" > .env.local
        echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env.local
        echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.local
        echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env.local
        echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
        echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env.local
        echo "NEXT_PUBLIC_OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.local
        echo "NEXT_PUBLIC_API_URL=${{ secrets.API_URL }}" >> .env.local

    - name: Run tests
      working-directory: ./web
      run: npm test -- --coverage --watchAll=false

    - name: Build project
      working-directory: ./web
      run: npm run build

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: projects/859800863588/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: github-actions@pfinance-app-1748773335.iam.gserviceaccount.com

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase
      working-directory: ./web
      run: firebase deploy --project ${{ env.PROJECT_ID }}

  build-and-deploy-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: projects/859800863588/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: github-actions@pfinance-app-1748773335.iam.gserviceaccount.com

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push container
      working-directory: ./backend
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/pfinance-backend:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/pfinance-backend:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy pfinance-backend \
          --image gcr.io/${{ env.PROJECT_ID }}/pfinance-backend:${{ github.sha }} \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --set-env-vars GOOGLE_CLOUD_PROJECT=${{ env.PROJECT_ID }}

    - name: Get Cloud Run URL
      id: get-url
      run: |
        echo "url=$(gcloud run services describe pfinance-backend --region=us-central1 --format='value(status.url)')" >> $GITHUB_OUTPUT

    - name: Output Backend URL
      run: |
        echo "Backend deployed to: ${{ steps.get-url.outputs.url }}"